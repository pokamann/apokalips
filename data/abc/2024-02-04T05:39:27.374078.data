environ({'ALLUSERSPROFILE': 'C:\\ProgramData', 'APPDATA': 'C:\\Users\\kingk\\AppData\\Roaming', 'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'COMPUTERNAME': 'DESKTOP-97SQ7DG', 'COMSPEC': 'C:\\Windows\\system32\\cmd.exe', 'DRIVERDATA': 'C:\\Windows\\System32\\Drivers\\DriverData', 'HOMEDRIVE': 'C:', 'HOMEPATH': '\\Users\\kingk', 'IDEA_INITIAL_DIRECTORY': 'C:\\Users\\kingk\\Downloads\\black-hat-python-2e-ja-master\\chapter-07', 'LOCALAPPDATA': 'C:\\Users\\kingk\\AppData\\Local', 'LOGONSERVER': '\\\\DESKTOP-97SQ7DG', 'MINGW': 'C:\\msys64\\mingw64\\bin', 'NUMBER_OF_PROCESSORS': '4', 'ONEDRIVE': 'C:\\Users\\kingk\\OneDrive', 'ONEDRIVECONSUMER': 'C:\\Users\\kingk\\OneDrive', 'OS': 'Windows_NT', 'PATH': 'C:\\Program Files (x86)\\VMware\\VMware Workstation\\bin\\;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\Common Files\\Oracle\\Java\\javapath;C:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\dotnet\\;C:\\Program Files\\PuTTY\\;C:\\Program Files\\Microsoft SQL Server\\120\\Tools\\Binn\\;C:\\Program Files\\CMake\\bin;C:\\Program Files (x86)\\Xpress Software\\AIDC\\Advanced ID Creator;C:\\Users\\kingk\\AppData\\Local\\Microsoft\\WindowsApps;C:\\msys64\\mingw64\\bin;C:\\msys64\\clang64\\bin;C:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.2.3\\bin;;', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC', 'PROCESSOR_ARCHITECTURE': 'AMD64', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 142 Stepping 9, GenuineIntel', 'PROCESSOR_LEVEL': '6', 'PROCESSOR_REVISION': '8e09', 'PROGRAMDATA': 'C:\\ProgramData', 'PROGRAMFILES': 'C:\\Program Files', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'PROGRAMW6432': 'C:\\Program Files', 'PSMODULEPATH': 'C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules', 'PT8HOME': 'C:\\Program Files\\Cisco Packet Tracer 8.2.1', 'PUBLIC': 'C:\\Users\\Public', 'PYCHARM COMMUNITY EDITION': 'C:\\Program Files\\JetBrains\\PyCharm Community Edition 2022.2.3\\bin;', 'PYCHARM_HOSTED': '1', 'PYQT5': 'C:\\Users\\kingk\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\PyQt5', 'PYQT5DESIGNER': 'C:\\Users\\kingk\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\qt5_applications\\Qt\\bin\\designer.exe', 'PYTHON SCRIPTS': 'C:\\Users\\kingk\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\Scripts', 'PYTHONIOENCODING': 'UTF-8', 'PYTHONPATH': 'C:\\Users\\kingk\\Downloads\\black-hat-python-2e-ja-master\\chapter-07;C:\\Users\\kingk\\Downloads\\black-hat-python-2e-ja-master\\chapter-08', 'PYTHONUNBUFFERED': '1', 'SESSIONNAME': 'Console', 'SYSTEMDRIVE': 'C:', 'SYSTEMROOT': 'C:\\Windows', 'TEMP': 'C:\\Users\\kingk\\AppData\\Local\\Temp', 'TMP': 'C:\\Users\\kingk\\AppData\\Local\\Temp', 'USERDOMAIN': 'DESKTOP-97SQ7DG', 'USERDOMAIN_ROAMINGPROFILE': 'DESKTOP-97SQ7DG', 'USERNAME': 'kingk', 'USERPROFILE': 'C:\\Users\\kingk', 'WINDIR': 'C:\\Windows', 'ZES_ENABLE_SYSMAN': '1', 'PYTHONUSERBASE': 'C:\\Users\\kingk\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages'})